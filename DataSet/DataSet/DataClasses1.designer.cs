#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataSet
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="datae")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertprovince(province instance);
    partial void Updateprovince(province instance);
    partial void Deleteprovince(province instance);
    partial void Insertrazzaq(razzaq instance);
    partial void Updaterazzaq(razzaq instance);
    partial void Deleterazzaq(razzaq instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::DataSet.Properties.Settings.Default.dataeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<province> provinces
		{
			get
			{
				return this.GetTable<province>();
			}
		}
		
		public System.Data.Linq.Table<razzaq> razzaqs
		{
			get
			{
				return this.GetTable<razzaq>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.provinces")]
	public partial class province : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _p_id;
		
		private string _p_name;
		
		private System.Nullable<int> _count_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onp_idChanging(int value);
    partial void Onp_idChanged();
    partial void Onp_nameChanging(string value);
    partial void Onp_nameChanged();
    partial void Oncount_idChanging(System.Nullable<int> value);
    partial void Oncount_idChanged();
    #endregion
		
		public province()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int p_id
		{
			get
			{
				return this._p_id;
			}
			set
			{
				if ((this._p_id != value))
				{
					this.Onp_idChanging(value);
					this.SendPropertyChanging();
					this._p_id = value;
					this.SendPropertyChanged("p_id");
					this.Onp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_name", DbType="VarChar(50)")]
		public string p_name
		{
			get
			{
				return this._p_name;
			}
			set
			{
				if ((this._p_name != value))
				{
					this.Onp_nameChanging(value);
					this.SendPropertyChanging();
					this._p_name = value;
					this.SendPropertyChanged("p_name");
					this.Onp_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count_id", DbType="Int")]
		public System.Nullable<int> count_id
		{
			get
			{
				return this._count_id;
			}
			set
			{
				if ((this._count_id != value))
				{
					this.Oncount_idChanging(value);
					this.SendPropertyChanging();
					this._count_id = value;
					this.SendPropertyChanged("count_id");
					this.Oncount_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.razzaq")]
	public partial class razzaq : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _fnam;
		
		private string _addres;
		
		private string _cnic;
		
		private string _salary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnfnamChanging(string value);
    partial void OnfnamChanged();
    partial void OnaddresChanging(string value);
    partial void OnaddresChanged();
    partial void OncnicChanging(string value);
    partial void OncnicChanged();
    partial void OnsalaryChanging(string value);
    partial void OnsalaryChanged();
    #endregion
		
		public razzaq()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fnam", DbType="VarChar(50)")]
		public string fnam
		{
			get
			{
				return this._fnam;
			}
			set
			{
				if ((this._fnam != value))
				{
					this.OnfnamChanging(value);
					this.SendPropertyChanging();
					this._fnam = value;
					this.SendPropertyChanged("fnam");
					this.OnfnamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addres", DbType="VarChar(50)")]
		public string addres
		{
			get
			{
				return this._addres;
			}
			set
			{
				if ((this._addres != value))
				{
					this.OnaddresChanging(value);
					this.SendPropertyChanging();
					this._addres = value;
					this.SendPropertyChanged("addres");
					this.OnaddresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cnic", DbType="VarChar(50)")]
		public string cnic
		{
			get
			{
				return this._cnic;
			}
			set
			{
				if ((this._cnic != value))
				{
					this.OncnicChanging(value);
					this.SendPropertyChanging();
					this._cnic = value;
					this.SendPropertyChanged("cnic");
					this.OncnicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary", DbType="VarChar(50)")]
		public string salary
		{
			get
			{
				return this._salary;
			}
			set
			{
				if ((this._salary != value))
				{
					this.OnsalaryChanging(value);
					this.SendPropertyChanging();
					this._salary = value;
					this.SendPropertyChanged("salary");
					this.OnsalaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
